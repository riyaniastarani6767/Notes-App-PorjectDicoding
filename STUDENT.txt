
HALAMAN:
- #/login : Login
- #/register : Register
- #/ : Home (list + peta, membutuhkan login)
- #/add : Tambah cerita (form + pilih lokasi via peta, membutuhkan login)
- #/about : Tentang


API: https://story-api.dicoding.dev/v1
- Auth: POST /register, POST /login (Bearer token disimpan di localStorage)
- Stories: GET /stories?location=1, POST /stories (multipart: photo, description, lat, lon)


PETA: Leaflet dengan 3 tile layer (OSM, Stamen, Esri) + layer control.


AKSESIBILITAS:
- Skip to content, alt text untuk gambar, label untuk semua input, keyboard-accessible.



CATATAN LOGIN UJI COBA (opsional jika reviewer butuh):
- Silakan register akun baru melalui halaman Register.


BUILD & RUN:
- npm install
- npm run dev
- npm run build



==============================
ðŸ”¹ Cara Ngetes di UI
==============================

1. Register
   - Buka halaman Register (#/register).
   - Isi form:
     Name: Tester One
     Email: tester+{timestamp}@gmail.com   (misalnya tester+1727100000000@gmail.com)
     Password: Testing123
   - Klik "Create account".
   Expected:
   - Redirect ke halaman Login.
   - Network tab â†’ /v1/register â†’ Status 201 â†’ { "error": false, "message": "User created" }

2. Login
   - Buka halaman Login (#/login).
   - Masukkan email & password yang baru dibuat.
   - Klik "Sign in".
   Expected:
   - Redirect ke halaman Beranda (#/).
   - Navbar muncul "Hai, Tester One".
   - LocalStorage tersimpan:
     - auth_token
     - auth_name

3. Login gagal
   - Masukkan email/password salah.
   Expected:
   - Muncul pesan merah: "Gagal masuk. Periksa email & password."
   - Network tab â†’ /v1/login â†’ Status 401 Unauthorized.

4. Tambah Story
   - Buka halaman Tambah (#/add).
   - Isi form:
     Description: Cerita test dari UI
     Latitude: -6.2
     Longitude: 106.8
     Foto: upload gambar
   - Klik Submit.
   Expected:
   - Network tab â†’ /v1/stories â†’ Status 201 Created.
   - Story baru muncul di halaman Beranda (#/) dengan marker di peta.

5. Skip to Content
   - Tekan Tab di halaman.
   - Fokus pertama ke link "Lewati ke konten".
   - Tekan Enter.
   Expected:
   - Fokus pindah ke konten utama (elemen #main-content), **bukan** ke /#app.

6. Aksesibilitas Input
   - Semua input sudah punya label.
   - Contoh di halaman Tambah:
     <label>Latitude <input name="lat" ... /></label>

==============================
ðŸ”¹ Cara Ngetes di Console
==============================
Buka DevTools â†’ Console, ketik `allow pasting` lalu Enter.  
Kemudian jalankan blok berikut secara berurutan:

1. Register (buat akun baru unik)
```js
const BASE = 'https://story-api.dicoding.dev/v1';
const email = `tester+${Date.now()}@gmail.com`;
const password = 'Testing123';

fetch(`${BASE}/register`, {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ name: 'Tester Console', email, password })
})
.then(r => r.json().then(body => ({ ok: r.ok, status: r.status, body })))
.then(res => console.log('REGISTER â†’', res));

Expected:
â†’ { ok: true, status: 201, body: { error: false, message: "User created" } }

2. Login
fetch(`${BASE}/login`, {
  method: 'POST',
  headers: { 'Content-Type': 'application/json' },
  body: JSON.stringify({ email, password })
})
.then(r => r.json().then(body => ({ ok: r.ok, status: r.status, body })))
.then(res => {
  console.log('LOGIN â†’', res);
  if (res.ok && res.body.loginResult?.token) {
    localStorage.setItem('auth_token', res.body.loginResult.token);
    localStorage.setItem('auth_name', res.body.loginResult.name || 'User');
    console.log('Token tersimpan â†’', localStorage.getItem('auth_token'));
  }
});
Expected:
â†’ { ok: true, status: 200, body: { loginResult: { userId, name, token } } }


3. Get Stories (pakai token dari login)
const token = localStorage.getItem('auth_token');
fetch(`${BASE}/stories?location=1`, {
  headers: { Authorization: `Bearer ${token}` }
})
.then(r => r.json().then(body => ({ ok: r.ok, status: r.status, body })))
.then(res => {
  console.log('GET STORIES â†’', res);
  console.log('Contoh story pertama:', res.body?.listStory?.[0]);
});
Expected:
â†’ Status 200, tampil daftar story dengan koordinat.

4. Create Story
(async () => {
  const token = localStorage.getItem('auth_token');
  const imgResp = await fetch('https://picsum.photos/400/300');
  const imgBlob = await imgResp.blob();

  const fd = new FormData();
  fd.append('photo', imgBlob, 'photo.jpg');
  fd.append('description', 'Story dari Console Test');
  fd.append('lat', '-6.2');
  fd.append('lon', '106.8');

  const res = await fetch(`${BASE}/stories`, {
    method: 'POST',
    headers: { Authorization: `Bearer ${token}` },
    body: fd
  });
  const body = await res.json();
  console.log('CREATE STORY â†’', res.status, body);
})();
Expected:
â†’ CREATE STORY â†’ 201 { error: false, message: "Story created successfully" }


https://<username>.github.io/Notes-App-PorjectDicoding/
